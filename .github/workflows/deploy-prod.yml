name: Code Quality & Test Check

on:
  push:
    branches:
      - main
      - 'feature/**'
  pull_request:

jobs:
  verify:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || echo "‚ö†Ô∏è requirements.txt not found or failed, continuing..."
          pip install pytest ruff

      - name: Lint code (Ruff)
        continue-on-error: true
        run: |
          echo "üîç Running linter..."
          ruff check . || echo "‚ö†Ô∏è Ruff found issues, continuing..."

      - name: Run tests (Pytest)
        continue-on-error: true
        env:
          FLASK_ENV: testing
        run: |
          echo "üß™ Running tests..."
          pytest -q || echo "‚ö†Ô∏è Tests failed or missing ‚Äî continuing for syntax check"

      - name: Verify Flask app startup
        continue-on-error: true
        run: |
          echo "üöÄ Checking Flask startup..."
          nohup python -m flask --app app run --no-debugger --no-reload > flask_log.txt 2>&1 &
          sleep 5
          if curl -s -I http://127.0.0.1:5000 | grep "200 OK"; then
            echo "‚úÖ Flask app started successfully"
          else
            echo "‚ö†Ô∏è Flask app failed to start ‚Äî check flask_log.txt for details"
          fi
          pkill -f "flask run" || true
